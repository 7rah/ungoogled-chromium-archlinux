The system header "re2/re2.h" does not have the "set_utf8" function, but the
referenced third-party header does, meaning that somehow the system header is
being included. Rather than fix the include, the function call has been changed
to "set_encoding()" as that exists in both the old and new header, as well as
the fact that "set_utf8" was refered to as "old api" in the old header. Using
"set_encoding()" appears to have the same effect as the previous "set_utf8()" as
long as the enum value "EncodingUTF8" is passed to it.
--- a/components/autofill/core/browser/address_rewriter.cc
+++ b/components/autofill/core/browser/address_rewriter.cc
@@ -57,7 +57,7 @@ void CompileRulesFromData(const std::str
                           CompiledRuleVector* compiled_rules) {
   base::StringPiece data = data_string;
   re2::RE2::Options options;
-  options.set_utf8(true);
+  options.set_encoding(re2::RE2::Options::EncodingUTF8);
   options.set_word_boundary(true);
 
   size_t token_end = 0;
